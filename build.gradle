plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
}

group = 'me.duro'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "playpro-repo"
        url = "https://maven.playpro.com"
    }
    maven {
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "citizens-repo"
        url = "https://repo.minebench.de/"
    }
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.5"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "net.coreprotect:coreprotect:22.2"
    implementation "net.citizensnpcs:citizensapi:2.0.30-SNAPSHOT"
    implementation(files("libs/citizens-main-2.0.30-SNAPSHOT.jar"))
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain(17)
}
